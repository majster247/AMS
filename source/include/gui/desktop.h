#ifndef __OS__GUI__DESKTOP_H
#define __OS__GUI__DESKTOP_H

#include <gui/widget.h>
#include <drivers/mouse.h>



namespace os {

	namespace gui {


		constexpr common::uint8_t cursorNormal[20*13] = {

			//replace 1 with 2 = ':%s/0x37/0x40/g'
			//0x50 = eyes
			//0x3f = white, 0x00 = black
			//0x40 = brown, 0x42 = light brown, 0x41 = dark brown
			//0x37 = skin, 0x2e = skin shadow
			//0x25 = pink, 0x2c = light pink

			//14 is brown btw

			0x00, 0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x00, 0x00,
			0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x00,
			0x40, 0x40, 0x40, 0x40, 0x40, 0x42, 0x2e, 0x42, 0x40, 0x40, 0x40, 0x40, 0x40,
			0x40, 0x40, 0x40, 0x42, 0x42, 0x2e, 0x37, 0x2e, 0x42, 0x42, 0x40, 0x40, 0x40,
			0x40, 0x40, 0x40, 0x2e, 0x2e, 0x37, 0x37, 0x37, 0x2e, 0x2e, 0x40, 0x40, 0x40,
			0x40, 0x40, 0x2e, 0x41, 0x41, 0x37, 0x37, 0x37, 0x41, 0x41, 0x2e, 0x40, 0x40,
			0x40, 0x40, 0x41, 0x3f, 0x3f, 0x37, 0x37, 0x37, 0x3f, 0x3f, 0x41, 0x40, 0x40,
			0x40, 0x40, 0x41, 0x3f, 0x50, 0x37, 0x37, 0x37, 0x50, 0x3f, 0x41, 0x40, 0x40,
			0x40, 0x40, 0x41, 0x3f, 0x50, 0x37, 0x37, 0x37, 0x50, 0x3f, 0x41, 0x40, 0x40,
			0x40, 0x40, 0x2e, 0x37, 0x37, 0x37, 0x37, 0x37, 0x37, 0x37, 0x2e, 0x40, 0x40,
			0x40, 0x40, 0x2e, 0x37, 0x37, 0x37, 0x37, 0x37, 0x37, 0x37, 0x2e, 0x40, 0x40,
			0x40, 0x40, 0x2e, 0x37, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x37, 0x2e, 0x40, 0x40,
			0x40, 0x40, 0x41, 0x37, 0x37, 0x2c, 0x2c, 0x2c, 0x37, 0x37, 0x41, 0x40, 0x40,
			0x40, 0x40, 0x41, 0x41, 0x37, 0x37, 0x37, 0x37, 0x37, 0x41, 0x41, 0x40, 0x40,
			0x40, 0x40, 0x41, 0x41, 0x41, 0x2e, 0x2e, 0x2e, 0x41, 0x41, 0x41, 0x40, 0x40,
			0x40, 0x40, 0x41, 0x41, 0x3f, 0x2e, 0x2e, 0x2e, 0x3f, 0x41, 0x41, 0x40, 0x40,
			0x42, 0x40, 0x42, 0x3f, 0x3f, 0x37, 0x2e, 0x2e, 0x3f, 0x3f, 0x42, 0x40, 0x42,
			0x00, 0x40, 0x42, 0x3f, 0x3f, 0x37, 0x37, 0x37, 0x3f, 0x3f, 0x42, 0x40, 0x00,
			0x00, 0x42, 0x3f, 0x3f, 0x3f, 0x25, 0x25, 0x25, 0x3f, 0x3f, 0x3f, 0x42, 0x00,
			0x25, 0x25, 0x2c, 0x3f, 0x3f, 0x2c, 0x25, 0x2c, 0x3f, 0x3f, 0x2c, 0x25, 0x25
		};
		
		constexpr common::uint8_t cursorClick[20*13] = {
			
			0x00, 0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x00, 0x00,
			0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x00,
			0x40, 0x40, 0x40, 0x40, 0x40, 0x42, 0x2e, 0x42, 0x40, 0x40, 0x40, 0x40, 0x40,
			0x40, 0x40, 0x40, 0x42, 0x42, 0x2e, 0x37, 0x2e, 0x42, 0x42, 0x40, 0x40, 0x40,
			0x40, 0x40, 0x40, 0x2e, 0x41, 0x37, 0x37, 0x37, 0x41, 0x2e, 0x40, 0x40, 0x40,
			0x40, 0x40, 0x2e, 0x37, 0x37, 0x41, 0x37, 0x41, 0x37, 0x37, 0x2e, 0x40, 0x40,
			0x40, 0x40, 0x2e, 0x41, 0x41, 0x37, 0x37, 0x37, 0x41, 0x41, 0x2e, 0x40, 0x40,
			0x40, 0x40, 0x41, 0x3f, 0x3f, 0x41, 0x37, 0x41, 0x3f, 0x3f, 0x41, 0x40, 0x40,
			0x40, 0x40, 0x41, 0x3f, 0x3f, 0x41, 0x37, 0x41, 0x3f, 0x3f, 0x41, 0x40, 0x40,
			0x40, 0x40, 0x2e, 0x41, 0x41, 0x37, 0x37, 0x37, 0x41, 0x41, 0x2e, 0x40, 0x40,
			0x40, 0x40, 0x2e, 0x37, 0x37, 0x37, 0x37, 0x37, 0x37, 0x37, 0x2e, 0x40, 0x40,
			0x40, 0x40, 0x2e, 0x37, 0x37, 0x2c, 0x2c, 0x2c, 0x37, 0x37, 0x2e, 0x40, 0x40,
			0x40, 0x40, 0x41, 0x37, 0x37, 0x2c, 0x2c, 0x2c, 0x37, 0x37, 0x41, 0x40, 0x40,
			0x40, 0x40, 0x41, 0x41, 0x37, 0x37, 0x37, 0x37, 0x37, 0x41, 0x41, 0x40, 0x40,
			0x40, 0x40, 0x41, 0x41, 0x41, 0x2e, 0x2e, 0x2e, 0x41, 0x41, 0x41, 0x40, 0x40,
			0x40, 0x40, 0x41, 0x41, 0x3f, 0x2e, 0x2e, 0x2e, 0x3f, 0x41, 0x41, 0x40, 0x40,
			0x42, 0x40, 0x42, 0x3f, 0x3f, 0x37, 0x2e, 0x2e, 0x3f, 0x3f, 0x42, 0x40, 0x42,
			0x00, 0x40, 0x42, 0x3f, 0x3f, 0x37, 0x37, 0x37, 0x3f, 0x3f, 0x42, 0x40, 0x00,
			0x00, 0x42, 0x3f, 0x3f, 0x3f, 0x25, 0x25, 0x25, 0x3f, 0x3f, 0x3f, 0x42, 0x00,
			0x25, 0x25, 0x2c, 0x3f, 0x3f, 0x2c, 0x25, 0x2c, 0x3f, 0x3f, 0x2c, 0x25, 0x25
		};



		class Desktop : public CompositeWidget, public os::drivers::MouseEventHandler {
		
			//protected:
			public:
				common::uint32_t MouseX;	
				common::uint32_t MouseY;	
				
				common::uint32_t oldMouseX;	
				common::uint32_t oldMouseY;	
	
				bool mouseMove = false;
				bool click = false;


				common::uint8_t color;
			public:
				Desktop(common::int32_t w, common::int32_t h, common::uint8_t color);
				~Desktop();

				void Draw(common::GraphicsContext* gc, bool mode);
				void DrawNoMouse(common::GraphicsContext* gc, bool mode);
				
				void MouseDraw(common::GraphicsContext* gc, bool mode);

				void OnMouseDown(common::uint8_t button);
				void OnMouseUp(common::uint8_t button);
				void OnMouseMove(int x, int y);
		
		};



	}
}










#endif
